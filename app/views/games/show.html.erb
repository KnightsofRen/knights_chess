<div>
  <a name="chess-game"><p class="invisible-text">!</p></a>
  <br class="clr" />

  <div class="game-interface col-xs-10 col-xs-offset-1">

    <div class="col-xs-8">
      <div class="game-background">
        <br class="clr" />

        <div class="chessboard board">
          <% (0..7).each do |y| %>
            <% (0..7).each do |x| %>
              <% if (x.even? && y.odd?) || (x.odd? && y.even?) %>

                <div class="black-tile tile" data-coordinates="<%= "#{x},#{(y-7).abs}" %>">
                  <div class="piece" data-update-url="<%= update_url(x,(y-7).abs) %>">
                      <%= render_piece(current_game, x,(y-7).abs) %>
                  </div>
                </div>

              <% else %>

                <div class="white-tile tile" data-coordinates="<%= "#{x},#{(y-7).abs}" %>"> 
                  <div class="piece" data-update-url="<%= update_url(x,(y-7).abs) %>">
                    <%= render_piece(current_game, x,(y-7).abs) %>
                  </div>
                </div>
              <% end %>
            <% end %>
          <% end %>
          <br class="clr" />
        </div> <!-- chessboard -->
      </div>
    </div>


    <div class="col-xs-4">
      <br class="clr" />
      <div class="panel panel-default shadow">
        <div class="panel-heading">
          <h3 class="panel-title text-center"><%= current_game.name %></h3>
        </div>
        <div class="panel-body">
          <div>
            <div class="col-xs-4 text-center">
              <div id="portrait1" class="<%= gravatar_class('white') %>">   
                <%= image_tag player('white').gravatar_url if player('white').present? %>
              </div>
              <h5 class="invisible-text"><%= "?" if player('white').nil? %></h5>
              <h5><%= player('white').username if player('white').present? %></h5>
              <hr class="hr-style">
              <small>white</small>
            </div>
            <div class="col-xs-4 text-center">
              <h1>vs.</h1>
            </div>
            <div class="col-xs-4 text-center">
              <div id="portrait2" class="<%= gravatar_class('black') %>">            
                <%= image_tag player('black').gravatar_url if player('black').present? %>
              </div>
              <h5 class="invisible-text"><%= "?" if player('black').nil? %></h5>
              <h5><%= player('black').username if player('black').present? %></h5>
              <hr class="hr-style">
              <small>black</small>
            </div>
            <br class="clr" /><br/>
            <div>
              <p><%= current_game.status %></p>
              <p id="game-turn" class="turn text-center"><%= current_game.turn.capitalize %> player's turn!</p>
              <br/>
              <button type="button" class="btn btn-danger">Forfeit</button>
              <!--%= link_to 'Forfeit', forfeit_game_path(current_game), method: :put, class: "btn btn-danger", data:  {confirm: "Are you sure you want to forfeit?"} %> -->
            </div>
          <div>
        </div>
      </div>
    </div>
  </div>

  <br class="clr" />
  <br class="clr" />
  <br class="clr" />
</div>

<br class="clr" />
<div id="dialog-black">
  <div class="dialog-tile">
    <%= "\u265B".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u265C".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u265D".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u265E".encode('utf-8') %>
  </div>
</div>

<div id="dialog-white">
  <div class="dialog-tile">
    <%= "\u2655".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u2656".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u2657".encode('utf-8') %>
  </div>
  <div class="dialog-tile">
    <%= "\u2658".encode('utf-8') %>
  </div>
</div>

<!-- -->

<script>
  $(function(){
    $('.board').css('cursor', 'pointer');
    // add class to piece to indicate it can be removed (can-be-captured) and that it is pre-rendered (static)
    $('.piece').addClass('can-be-captured static'); 

    $('.piece').draggable({
      containment: '.board',
      cursorAt: { top: 60, left: 56 },
      snap: '.tile', 
      revert: 'invalid',
      start: function(event, ui) {
        drag_position = ui.position;
        
        // ajax --> pieces#show (renders text of valid moves) --> highlight those moves
        $.ajax({
          type: 'GET',
          url: $(this).data('update-url'),
        }).done(function(r) {
          if ( r.length > 0 ) {
            valid_moves = JSON.parse(r);
            var target;
            arrayLength = valid_moves.length;
            for (var i = 0; i < arrayLength; i++) {
              target = valid_moves[i].toString();
              $('.tile[data-coordinates="'+ target +'"]').addClass('highlight-light');

              // droppable
              $('.tile[data-coordinates="'+ target +'"]').droppable({
                drop: function(event, ui) {
                  ui.draggable.position( { of: $(this), my: 'left top', at: 'left top' } );
                  updatePieceLocation(event, ui); 
                  $(this).droppable('destroy');
                }
              });
            } // for
          } // if
        }).fail(function (x, t, e) {
          console.log(e);
        });
      }, //start
      stop: function() {
        $('.tile').removeClass('highlight-light');
      }   
    }); 
    
    function updatePieceLocation(event, ui) {
      x = event.target.dataset.coordinates[0];
      y = event.target.dataset.coordinates[2];
      
      //
      
      // $('#dialog-black').dialog({
      //   resizable: false,
      //   width: 360,
      //   position: { of: ui.draggable, my: 'left+12 top', at: 'left top-96' },
      // }); // dialog
      // $(".ui-dialog-titlebar").hide();
      // $(".ui-dialog-buttonpane").hide();
      // $(".ui-dialog").css({'background': '#f5eacd', 'border': '1px solid #293e6a'});
      // $(".ui-dialog-content").css('background', '#f5eacd');

      // ajax ==> pieces#update
      $.ajax({
        type: 'PUT',
        url: ui.draggable.data('update-url'),
        dataType: 'text',
        data: { x_pos: x, y_pos: y, choice: 'Knight' }
      }).done(function(r) {
        // "reset" piece (can be captured, static, & any added prior location class removed)
        ui.draggable.attr('class', 'piece ui-draggable ui-draggable-handle') 
        ui.draggable.addClass(x+y);   // add class to piece to indicate current location
        // piece removal 
        $('.can-be-captured'+'.'+x+y).remove();  // remove any previously dragged piece at this location
        $(event.target).find('div.can-be-captured.static').remove();  // remove pre-rendered piece 
        // "re-enable" piece for future removal
        ui.draggable.addClass('can-be-captured'); 
        // update turn on page
        $('#portrait1,#portrait2').toggleClass('highlight-turn');
        $('#game-turn').text($('#game-turn').text() == "White player's turn!" ? "Black player's turn!" : "White player's turn!");
      }).fail(function (x, t, e) {
        // revert draggable (piece) on ajax call failure 
        ui.draggable.css({
          'left': drag_position.left,
          'top': drag_position.top
        });
      });
    } // updatePieceLocation

    //
    $('.btn-danger').click(function(){
      if (confirm('Are you sure you want to forfeit?')) {
        $.ajax({
          type: 'PUT',
          url: "<%= forfeit_game_path(current_game) %>",
          success: function(r) {
            $('#game-turn').removeClass('turn');
            $('#game-turn').addClass('forfeit');
            $('#game-turn').text(r);
          },
          error: function() {
            alert("You cannot forfeit a game that has status: <%= current_game.status %>!");
          }
        });
      };
    });
    //

  }); // function

</script>
